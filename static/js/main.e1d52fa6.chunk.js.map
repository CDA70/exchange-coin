{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AccountBalance/AccountBalance.jsx","components/ExchangeHeader/logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Coin","props","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleRefresh","tickerId","Table","table","CoinList","coinData","map","key","Section","section","AccountBalance","buttonText","content","amount","className","handleBalanceVisibilityChange","Img","img","Header","header","H1","h1","ExchangeHeader","src","logo","alt","Component","Div","div","formatPrice","parseFloat","Number","toFixed","App","React","useState","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","id","promises","Promise","all","coinPriceData","symbol","quotes","USD","useEffect","length","valueChangeId","tickerUrl","newPrice","newCoinData","values","newValues","oldValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1d52fa6.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Td = styled.td `\r\n    border: 1px solid #cccccc;\r\n    width: 25vh;\r\n    color: white;\r\n`;\r\n\r\nexport default function Coin(props) {\r\n    \r\n    const handleClick = (event) => {\r\n        // prevent the default action of submitting the form.\r\n        event.preventDefault();\r\n\r\n        props.handleRefresh(props.tickerId);\r\n\r\n    }\r\n    \r\n    \r\n    return (\r\n        <tr>\r\n            <Td>{props.name}</Td>\r\n            <Td>{props.ticker}</Td>\r\n            <Td>${props.price}</Td>\r\n            {props.showBalance ? <Td>${props.balance}</Td> : null}\r\n            <Td>\r\n                <form action=\"#\" method=\"POST\">\r\n                    <button onClick={handleClick} >Refresh</button>\r\n                </form>\r\n                \r\n            </Td>\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\nCoin.propTypes = {\r\n    name: propTypes.string.isRequired,\r\n    ticker: propTypes.string.isRequired,\r\n    price: propTypes.number.isRequired\r\n}\r\n\r\n","import React from 'react';\r\nimport Coin from '../Coin/Coin';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n  margin: 50px auto 50px auto;\r\n  display: inline-block;\r\n  font-size: 1.4rem;\r\n\r\n`;\r\n\r\nexport default function CoinList(props) {\r\n    return (\r\n        <Table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Ticker</th>\r\n                    <th>Price</th>\r\n                    {props.showBalance ? <th>Balance</th> : null}\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.coinData.map( ({key, name, ticker, price, balance}) =>\r\n                        <Coin key={key} \r\n                                handleRefresh={props.handleRefresh}  \r\n                                name={name} \r\n                                ticker={ticker} \r\n                                showBalance={props.showBalance}\r\n                                balance={balance}\r\n                                price={price} \r\n                                tickerId={key} />\r\n                    )\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n    \r\n}\r\n","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Section = styled.section `\r\n    font-size: 2rem;\r\n    text-align: left;\r\n    padding: 1.5rem 0 1.5rem 5rem;\r\n`;\r\n\r\nexport default function AccountBalance(props) {\r\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\r\n    let content = null;\r\n    if (props.showBalance) {\r\n        content = <><strong>Balance = $</strong> {props.amount}</>\r\n\r\n    }\r\n\r\n    return (\r\n        <Section className=\"balance\">\r\n            {content}\r\n            <button onClick={props.handleBalanceVisibilityChange}>{buttonText}</button>\r\n        </Section>\r\n    );\r\n}\r\n\r\n\r\nAccountBalance.propTypes = {\r\n    amount: propTypes.number.isRequired\r\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\nimport logo from './logo.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst Img = styled.img `\r\n    height: 5rem;\r\n    pointer-events: none;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    background-color: #292a2c;\r\n    min-height: 20vh;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    font-size: 36px;\r\n    color: white;\r\n`;\r\n\r\nconst H1 = styled.h1 `\r\n    font-size: 4rem;\r\n`;\r\n\r\n\r\n\r\nexport default class ExchangeHeader extends Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <Img src={logo} alt=\"React logo\" />\r\n                <H1>\r\n                    Coin Exchange\r\n                </H1>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n","\nimport CoinList from './components/CoinList/CoinList';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport React, {useState, useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst Div = styled.div `\n  text-align: center;\n  background-color: rgb(59, 59, 156);\n  color: #cccccc;\n`;\n\nconst COIN_COUNT = 10;\n\nconst formatPrice = price => parseFloat(Number(price).toFixed(4));\n\nfunction App(props) {\n  \n  const [balance, setBalance] = React.useState(10000);\n  const [showBalance, setShowBalance] = React.useState(true);\n  const [coinData, setCoinData] = React.useState([]);\n  \n  const componentDidMount = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins');\n    const coinIds = response.data.slice(0, COIN_COUNT).map( coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response) {\n      const coin = response.data;\n\n      return{\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: formatPrice(coin.quotes.USD.price),\n      }\n    })\n    // retrieve the prices\n    setCoinData(coinPriceData);\n  }\n  \n\n  useEffect(function () {\n    if (coinData.length === 0 ) {\n      // component did mount\n      componentDidMount();\n    } \n  });\n\n \n  const handleBalanceVisibilityChange = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  const handleRefresh = async (valueChangeId) => {\n    const tickerUrl = `https://api.coinpaprika.com/v1/tickers/${valueChangeId}`;\n    const response = await axios.get(tickerUrl);\n    \n    const newPrice = formatPrice(response.data.quotes.USD.price);\n    const newCoinData = coinData.map( function( values ){\n      let newValues = {...values};\n      if (valueChangeId === values.key){\n        \n          newValues.price =  newPrice;\n      }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n  }\n\n\n  return (\n    <Div className=\"App\">\n      <ExchangeHeader />\n      <AccountBalance \n        amount={balance} \n        showBalance={showBalance} \n        handleBalanceVisibilityChange={handleBalanceVisibilityChange} />\n      <CoinList \n        coinData={coinData} \n        showBalance={showBalance}\n        handleRefresh = {handleRefresh} />\n    </Div>\n  );\n\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}